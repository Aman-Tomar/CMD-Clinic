// <auto-generated />
using CMD.DummyAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMD.DummyAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240912194020_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMD.DummyAPI.Model.Clinic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Clinics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "contact@fortisindia.com",
                            Name = "Fortis Hospital",
                            PhoneNumber = "08066214444",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Email = "info@apollohospitals.com",
                            Name = "Apollo Hospital",
                            PhoneNumber = "18605007788",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 3,
                            Email = "info@aiimsdelhi.edu",
                            Name = "AIIMS Delhi",
                            PhoneNumber = "01126588500",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 4,
                            Email = "info@maxhealthcare.com",
                            Name = "Max Healthcare",
                            PhoneNumber = "01142550000",
                            Status = "Active"
                        },
                        new
                        {
                            Id = 5,
                            Email = "contact@manipalhospitals.com",
                            Name = "Manipal Hospitals",
                            PhoneNumber = "08025681818",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("CMD.DummyAPI.Model.ClinicAddress", b =>
                {
                    b.Property<int>("ClinicAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClinicAddressId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ClinicId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ClinicAddressId");

                    b.HasIndex("ClinicId")
                        .IsUnique();

                    b.ToTable("ClinicAddresses");

                    b.HasData(
                        new
                        {
                            ClinicAddressId = 1,
                            City = "Mohali",
                            ClinicId = 1,
                            Country = "India",
                            Location = "30.7046° N, 76.7179° E",
                            State = "Punjab",
                            Street = "Sector 62, Phase 8",
                            ZipCode = "160062"
                        },
                        new
                        {
                            ClinicAddressId = 2,
                            City = "Chennai",
                            ClinicId = 2,
                            Country = "India",
                            Location = "13.0827° N, 80.2707° E",
                            State = "Tamil Nadu",
                            Street = "Greams Road",
                            ZipCode = "600006"
                        },
                        new
                        {
                            ClinicAddressId = 3,
                            City = "New Delhi",
                            ClinicId = 3,
                            Country = "India",
                            Location = "28.5672° N, 77.2100° E",
                            State = "Delhi",
                            Street = "Ansari Nagar",
                            ZipCode = "110029"
                        },
                        new
                        {
                            ClinicAddressId = 4,
                            City = "New Delhi",
                            ClinicId = 4,
                            Country = "India",
                            Location = "28.5496° N, 77.2130° E",
                            State = "Delhi",
                            Street = "Press Enclave Road",
                            ZipCode = "110048"
                        },
                        new
                        {
                            ClinicAddressId = 5,
                            City = "Bengaluru",
                            ClinicId = 5,
                            Country = "India",
                            Location = "12.9584° N, 77.6144° E",
                            State = "Karnataka",
                            Street = "Old Airport Road",
                            ZipCode = "560017"
                        });
                });

            modelBuilder.Entity("CMD.DummyAPI.Model.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "Cardiology"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "Pediatrics"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "Orthopedics"
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentName = "Neurology"
                        },
                        new
                        {
                            DepartmentId = 5,
                            DepartmentName = "Gastroenterology"
                        },
                        new
                        {
                            DepartmentId = 6,
                            DepartmentName = "Oncology"
                        },
                        new
                        {
                            DepartmentId = 7,
                            DepartmentName = "Dermatology"
                        },
                        new
                        {
                            DepartmentId = 8,
                            DepartmentName = "Urology"
                        },
                        new
                        {
                            DepartmentId = 9,
                            DepartmentName = "Rheumatology"
                        });
                });

            modelBuilder.Entity("CMD.DummyAPI.Model.ClinicAddress", b =>
                {
                    b.HasOne("CMD.DummyAPI.Model.Clinic", "Clinic")
                        .WithOne("ClinicAddress")
                        .HasForeignKey("CMD.DummyAPI.Model.ClinicAddress", "ClinicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("CMD.DummyAPI.Model.Clinic", b =>
                {
                    b.Navigation("ClinicAddress")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
